#!/usr/bin/env bash

HOME="${HOME:-/home/ch}"
DOTFILES="${DOTFILES:-$HOME/projects/dotfiles}"
LOCAL_BIN="${LOCAL_BIN:-$HOME/.local/bin}"

function links {
  rm -rf \
    $HOME/.zshrc \
    $HOME/.vimrc \
    $HOME/.saml2aws \
    $HOME/.aws/config \
    $HOME/.config/nvim \
    $HOME/.config/git \
    $HOME/.config/ghostty \
    $HOME/.config/atuin/config.toml \
    $HOME/.config/starship.toml \
    $HOME/.config/user-dirs.dirs \
    $HOME/.local/share/applications/zen.desktop \
    $HOME/.local/share/applications/ghostty.desktop \
    $HOME/.local/share/icons/ghostty.png \
    $HOME/.local/share/icons/zen.png \
    $HOME/.local/share/fonts

  ln -s $DOTFILES/.zshrc $HOME/.zshrc
  ln -s $DOTFILES/.vimrc $HOME/.vimrc
  ln -s $DOTFILES/.saml2aws $HOME/.saml2aws
  ln -s $DOTFILES/.aws/config $HOME/.aws/config
  ln -s $DOTFILES/.config/nvim $HOME/.config/nvim
  ln -s $DOTFILES/.config/git $HOME/.config/git
  ln -s $DOTFILES/.config/ghostty $HOME/.config/ghostty
  ln -s $DOTFILES/.config/atuin/config.toml $HOME/.config/atuin/config.toml
  ln -s $DOTFILES/.config/starship.toml $HOME/.config/starship.toml
  ln -s $DOTFILES/.config/user-dirs.dirs $HOME/.config/user-dirs.dirs
  ln -s $DOTFILES/.local/share/applications/zen.desktop $HOME/.local/share/applications/zen.desktop
  ln -s $DOTFILES/.local/share/applications/ghostty.desktop $HOME/.local/share/applications/ghostty.desktop
  ln -s $DOTFILES/.local/share/icons/ghostty.png $HOME/.local/share/icons/ghostty.png
  ln -s $DOTFILES/.local/share/icons/zen.png $HOME/.local/share/icons/zen.png
  ln -s $DOTFILES/.local/share/fonts $HOME/.local/share/fonts
}

function env {
  gnome_themes
  theme
  fonts
  icons
  desktop
}

function packages {
  claude
  neovim
  zoxide
  zen
  ghostty
  direnv
  docker
  just
  atuin
  rustup
  saml2aws
  aws
  eza
  fd
  ripgrep
  nala
  volta
  pnpm
  bat
  procs
  sd
  btm
  dust
  ngrok
  fly
  starship
  fzf
  zsh_plugins
  gh
}

function neovim {
  curl -fsSL https://github.com/neovim/neovim/releases/download/v0.11.4/nvim-linux-x86_64.appimage -o $LOCAL_BIN/nvim \
    && chmod +x $LOCAL_BIN/nvim
}

function zoxide {
  curl -fsSL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
}

function zen {
  curl -fsSL https://github.com/zen-browser/desktop/releases/latest/download/zen-x86_64.AppImage -o $LOCAL_BIN/zen \
    && chmod +x $LOCAL_BIN/zen
}

function ghostty {
  curl -fsSL https://github.com/psadi/ghostty-appimage/releases/download/v1.1.2%2B4/Ghostty-1.1.2-x86_64.AppImage -o $LOCAL_BIN/ghostty \
    && chmod +x $LOCAL_BIN/ghostty
}

function direnv {
  curl -fsSL https://direnv.net/install.sh | bash
}

function docker {
  curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh ./get-docker.sh
}

function just {
  curl --proto '=https' --tlsv1.2 -fsSL https://just.systems/install.sh | bash -s -- --to $LOCAL_BIN
}

function atuin {
  curl --proto '=https' --tlsv1.2 -fsSL https://setup.atuin.sh | sh
}

function rustup {
  curl --proto '=https' --tlsv1.2 -fsSL https://sh.rustup.rs | sh
}

function starship {
  BIN_DIR=$LOCAL_BIN curl --proto '=https' --tlsv1.2 -sS https://starship.rs/install.sh | sh
}

function saml2aws {
  CURRENT_VERSION=$(curl -Ls https://api.github.com/repos/Versent/saml2aws/releases/latest | grep 'tag_name' | cut -d'v' -f2 | cut -d'"' -f1) \
    && curl -fsSL "https://github.com/Versent/saml2aws/releases/download/v${CURRENT_VERSION}/saml2aws_${CURRENT_VERSION}_linux_amd64.tar.gz" \
      | tar -xz -C $LOCAL_BIN \
    && chmod +x $LOCAL_BIN/saml2aws
}

function aws {
  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && sudo ./aws/install --bin-dir $LOCAL_BIN --install-dir $HOME/.local/aws-cli \
    && rm awscliv2.zip
}

function eza {
  curl -fsSL https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz \
    | tar -xz -C $LOCAL_BIN \
    && chmod +x $LOCAL_BIN/eza \
    && command eza --version
}

function fd {
  curl -fsSL https://github.com/sharkdp/fd/releases/download/v10.2.0/fd-v10.2.0-x86_64-unknown-linux-gnu.tar.gz \
    | tar -xz -C $LOCAL_BIN \
    && chmod +x $LOCAL_BIN/fd
}

function ripgrep {
  curl -fsSL https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep-14.1.1-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/rg' \
    && chmod +x $LOCAL_BIN/rg \
    && command rg --version
}

function nala {
  curl -fsSL https://gitlab.com/-/project/31927362/uploads/1164b1c240e4cdacc652b3dd5953c3d1/nala_0.15.4_all.deb -O nala.deb \
    && sudo dpkg -i nala.deb \
    && rm nala.deb \
    && command nala --version
}

function volta {
  curl https://get.volta.sh | bash
}

function pnpm {
  curl -fsSL https://get.pnpm.io/install.sh | sh -
}

function bat {
  curl -fsSL https://github.com/sharkdp/bat/releases/download/v0.25.0/bat-v0.25.0-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/bat' \
    && chmod +x $LOCAL_BIN/bat \
    && command bat --version
}

function procs {
  curl -fsSL https://github.com/dalance/procs/releases/download/v0.14.9/procs-v0.14.9-x86_64-linux.zip -o procs.zip \
    && unzip -qu procs.zip procs -d $LOCAL_BIN \
    && rm procs.zip \
    && chmod +x $LOCAL_BIN/procs \
    && command procs --version
}

function sd {
  curl -fsSL https://github.com/chmln/sd/releases/download/v1.0.0/sd-v1.0.0-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/sd' \
    && chmod +x $LOCAL_BIN/sd \
    && command sd --version
}

function dust {
  curl -fsSL https://github.com/bootandy/dust/releases/download/v1.1.2/dust-v1.1.2-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/dust' \
    && chmod +x $LOCAL_BIN/dust \
    && command dust --version
}

function btm {
  curl -fsSL https://github.com/ClementTsang/bottom/releases/download/0.10.2/bottom_x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN btm \
    && chmod +x $LOCAL_BIN/btm \
    && command btm --version
}

function ngrok {
  curl -fsSL https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz \
    | tar -xz -C $LOCAL_BIN ngrok \
    && chmod +x $LOCAL_BIN/ngrok \
    && command ngrok --version
}

function fly {
  curl -fsSL https://fly.io/install.sh | sh
}

function fzf {
  curl -fsSL https://github.com/junegunn/fzf/releases/download/v0.61.3/fzf-0.61.3-linux_amd64.tar.gz \
    | tar -xz -C $LOCAL_BIN fzf \
    && chmod +x $LOCAL_BIN/fzf \
    && command fzf --version
}

function claude {
  curl -fsSL https://claude.ai/install.sh | bash
}

function zsh_plugins {
  rm -rf ~/.zsh
  mkdir ~/.zsh

  git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions
  git clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.zsh/zsh-syntax-highlighting
  git clone https://github.com/zsh-users/zsh-completions ~/.zsh/zsh-completions
}

function gh {
  (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
    && sudo mkdir -p -m 755 /etc/apt/keyrings \
          && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
          && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
    && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && sudo apt update \
    && sudo apt install gh -y
  gh ext install meiji163/gh-notify
}

function gnome_themes {
  file="user-themegnome-shell-extensions.gcampax.github.com.v49.shell-extension.zip"
  dest="$HOME/.local/share/gnome-shell/extensions"
  plugin="user-theme@gnome-shell-extensions.gcampax.github.com"
  # For possible use later.
  # gnome_version=$(gnome-shell --version | awk '{print $3}' | awk -F'.' '{print $1}')

  wget "https://extensions.gnome.org/extension-data/$file"
  mkdir -p "$dest"
  unzip "$file" -d "$dest/$plugin"
  gnome-extensions enable "$plugin"
  rm "$file"
}

function theme {
  file="theme.tar.xz"

  curl -sLo "$file" "https://github.com/EliverLara/Nordic/releases/download/v2.2.0/Nordic-bluish-accent-v40.tar.xz"
  mkdir ~/.themes
  tar -xf "$file" -C ~/.themes

  dconf write /org/gnome/desktop/interface/gtk-theme "'Nordic-bluish-accent-v40'"
  dconf write /org/gnome/shell/extensions/user-theme/name "'Nordic-bluish-accent-v40'"

  rm "$file"
}

function icons {
  git clone https://github.com/alvatip/Nordzy-icon icons
  cd icons/
  sudo ./install.sh
  cd ..
  rm -rf icons
  dconf write /org/gnome/desktop/interface/icon-theme "'Nordzy-dark'"
}

function desktop {
  image_dir="$HOME/pictures"
  mkdir "$image_dir"
  image="background.jpeg"

  cp "image/$image" "$image_dir"
  gsettings set org.gnome.shell.extensions.pop-shell show-title false
  gsettings set org.gnome.shell.extensions.pop-shell active-hint true
  # Below does not appear to work. Hex is #81A1C1.
  gsettings set org.gnome.shell.extensions.pop-shell hint-color-rgba 'rbg(129,161,193)'
  gsettings set org.gnome.shell.extensions.pop-shell gap-inner 5
  gsettings set org.gnome.shell.extensions.pop-shell gap-outer 5
  gsettings set org.gnome.desktop.background show-desktop-icons false
  gsettings set org.gnome.desktop.background picture-uri "file://$image_dir/$image"
  gsettings set org.gnome.desktop.background picture-uri-dark "file://$image_dir/$image"

  killall -3 gnome-shell
}

function fonts {
  font_dir="$HOME/.fonts/"

  curl -sLo font.zip "https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/CascadiaCode.zip"
  mkdir tmp
  unzip font.zip -d tmp
  mkdir "$font_dir"

  mv tmp/Caskaydia\ Cove\ Nerd\ Font\ Complete\ Mono\ Bold.otf "$font_dir"
  mv tmp/Caskaydia\ Cove\ Nerd\ Font\ Complete\ Mono\ Regular.otf "$font_dir"
  mv tmp/Caskaydia\ Cove\ Nerd\ Font\ Complete\ Mono\ Italic.otf "$font_dir"
  mv tmp/Caskaydia\ Cove\ Nerd\ Font\ Complete\ Mono\ Bold\ Italic.otf "$font_dir"
  fc-cache -fv | grep "$font_dir"

  rm -rf tmp
  rm font.zip
}

"$@"
