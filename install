#!/usr/bin/env bash

HOME="${HOME:-/home/ch}"
DOTFILES="${DOTFILES:-$HOME/projects/dotfiles}"
LOCAL_BIN="${LOCAL_BIN:-$HOME/.local/bin}"

function links {
  rm -rf \
    $HOME/.zshrc \
    $HOME/.vimrc \
    $HOME/.saml2aws \
    $HOME/.aws/config \
    $HOME/.config/nvim \
    $HOME/.config/git \
    $HOME/.config/ghostty \
    $HOME/.config/atuin/config.toml \
    $HOME/.config/starship.toml \
    $HOME/.config/user-dirs.dirs \
    $HOME/.local/share/applications/zen.desktop \
    $HOME/.local/share/applications/ghostty.desktop \
    $HOME/.local/share/icons/ghostty.png \
    $HOME/.local/share/icons/zen.png \
    $HOME/.local/share/fonts

  ln -s $DOTFILES/.zshrc $HOME/.zshrc
  ln -s $DOTFILES/.vimrc $HOME/.vimrc
  ln -s $DOTFILES/.saml2aws $HOME/.saml2aws
  ln -s $DOTFILES/.aws/config $HOME/.aws/config
  ln -s $DOTFILES/.config/nvim $HOME/.config/nvim
  ln -s $DOTFILES/.config/git $HOME/.config/git
  ln -s $DOTFILES/.config/ghostty $HOME/.config/ghostty
  ln -s $DOTFILES/.config/atuin/config.toml $HOME/.config/atuin/config.toml
  ln -s $DOTFILES/.config/starship.toml $HOME/.config/starship.toml
  ln -s $DOTFILES/.config/user-dirs.dirs $HOME/.config/user-dirs.dirs
  ln -s $DOTFILES/.local/share/applications/zen.desktop $HOME/.local/share/applications/zen.desktop
  ln -s $DOTFILES/.local/share/applications/ghostty.desktop $HOME/.local/share/applications/ghostty.desktop
  ln -s $DOTFILES/.local/share/icons/ghostty.png $HOME/.local/share/icons/ghostty.png
  ln -s $DOTFILES/.local/share/icons/zen.png $HOME/.local/share/icons/zen.png
  ln -s $DOTFILES/.local/share/fonts $HOME/.local/share/fonts
}

function all {
  neovim
  zoxide
  zen
  ghostty
  direnv
  docker
  just
  atuin
  rustup
  saml2aws
  aws
  eza
  fd
  ripgrep
  nala
  volta
  pnpm
  bat
  procs
  sd
  btm
  dust
  ngrok
  fly
  starship
  fzf
  zsh_plugins
}

function neovim {
  curl -fsSL https://github.com/neovim/neovim/releases/download/v0.10.4/nvim-linux-x86_64.appimage -o $LOCAL_BIN/nvim \
    && chmod +x $LOCAL_BIN/nvim
}

function zoxide {
  curl -fsSL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
}

function zen {
  curl -fsSL https://github.com/zen-browser/desktop/releases/latest/download/zen-x86_64.AppImage -o $LOCAL_BIN/zen \
    && chmod +x $LOCAL_BIN/zen
}

function ghostty {
  curl -fsSL https://github.com/psadi/ghostty-appimage/releases/download/v1.1.2%2B4/Ghostty-1.1.2-x86_64.AppImage -o $LOCAL_BIN/ghostty \
    && chmod +x $LOCAL_BIN/ghostty
}

function direnv {
  curl -fsSL https://direnv.net/install.sh | bash
}

function docker {
  curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh ./get-docker.sh
}

function just {
  curl --proto '=https' --tlsv1.2 -fsSL https://just.systems/install.sh | bash -s -- --to $LOCAL_BIN
}

function atuin {
  curl --proto '=https' --tlsv1.2 -fsSL https://setup.atuin.sh | sh
}

function rustup {
  curl --proto '=https' --tlsv1.2 -fsSL https://sh.rustup.rs | sh
}

function starship {
  BIN_DIR=$LOCAL_BIN curl --proto '=https' --tlsv1.2 -sS https://starship.rs/install.sh | sh
}

function saml2aws {
  CURRENT_VERSION=$(curl -Ls https://api.github.com/repos/Versent/saml2aws/releases/latest | grep 'tag_name' | cut -d'v' -f2 | cut -d'"' -f1) \
    && curl -fsSL "https://github.com/Versent/saml2aws/releases/download/v${CURRENT_VERSION}/saml2aws_${CURRENT_VERSION}_linux_amd64.tar.gz" \
      | tar -xz -C $LOCAL_BIN \
    && chmod +x $LOCAL_BIN/saml2aws
}

function aws {
  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && sudo ./aws/install --bin-dir $LOCAL_BIN --install-dir $HOME/.local/aws-cli \
    && rm awscliv2.zip
}

function eza {
  curl -fsSL https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz \
    | tar -xz -C $LOCAL_BIN \
    && chmod +x $LOCAL_BIN/eza \
    && command eza --version
}

function fd {
  curl -fsSL https://github.com/sharkdp/fd/releases/download/v10.2.0/fd-v10.2.0-x86_64-unknown-linux-gnu.tar.gz \
    | tar -xz -C $LOCAL_BIN \
    && chmod +x $LOCAL_BIN/fd
}

function ripgrep {
  curl -fsSL https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep-14.1.1-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/rg' \
    && chmod +x $LOCAL_BIN/rg \
    && command rg --version
}

function nala {
  curl -fsSL https://gitlab.com/-/project/31927362/uploads/1164b1c240e4cdacc652b3dd5953c3d1/nala_0.15.4_all.deb -O nala.deb \
    && sudo dpkg -i nala.deb \
    && rm nala.deb \
    && command nala --version
}

function volta {
  curl https://get.volta.sh | bash
}

function pnpm {
  curl -fsSL https://get.pnpm.io/install.sh | sh -
}

function bat {
  curl -fsSL https://github.com/sharkdp/bat/releases/download/v0.25.0/bat-v0.25.0-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/bat' \
    && chmod +x $LOCAL_BIN/bat \
    && command bat --version
}

function procs {
  curl -fsSL https://github.com/dalance/procs/releases/download/v0.14.9/procs-v0.14.9-x86_64-linux.zip -o procs.zip \
    && unzip -qu procs.zip procs -d $LOCAL_BIN \
    && rm procs.zip \
    && chmod +x $LOCAL_BIN/procs \
    && command procs --version
}

function sd {
  curl -fsSL https://github.com/chmln/sd/releases/download/v1.0.0/sd-v1.0.0-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/sd' \
    && chmod +x $LOCAL_BIN/sd \
    && command sd --version
}

function dust {
  curl -fsSL https://github.com/bootandy/dust/releases/download/v1.1.2/dust-v1.1.2-x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN --strip-components=1 --wildcards '*/dust' \
    && chmod +x $LOCAL_BIN/dust \
    && command dust --version
}

function btm {
  curl -fsSL https://github.com/ClementTsang/bottom/releases/download/0.10.2/bottom_x86_64-unknown-linux-musl.tar.gz \
    | tar -xz -C $LOCAL_BIN btm \
    && chmod +x $LOCAL_BIN/btm \
    && command btm --version
}

function ngrok {
  curl -fsSL https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz \
    | tar -xz -C $LOCAL_BIN ngrok \
    && chmod +x $LOCAL_BIN/ngrok \
    && command ngrok --version
}

function fly {
  curl -fsSL https://fly.io/install.sh | sh
}

function fzf {
  curl -fsSL https://github.com/junegunn/fzf/releases/download/v0.61.3/fzf-0.61.3-linux_amd64.tar.gz \
    | tar -xz -C $LOCAL_BIN fzf \
    && chmod +x $LOCAL_BIN/fzf \
    && command fzf --version
}

function zsh_plugins {
  rm -rf ~/.zsh
  mkdir ~/.zsh

  git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions
  git clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.zsh/zsh-syntax-highlighting
  git clone https://github.com/zsh-users/zsh-completions ~/.zsh/zsh-completions
}

"$@"
